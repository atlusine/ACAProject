{
	"info": {
		"_postman_id": "773621bd-1621-439c-a8be-8b32054c12de",
		"name": "Test Collection",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "https://jsonplaceholder.typicode.com/users",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Check if user with id1 is Leanne Graham\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].name).to.eql(\"Leanne Graham\");\r",
							"});\r",
							"pm.test(\"Check if user's email with id1 is Sincere@april.biz\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].email).to.eql(\"Sincere@april.biz\");\r",
							"});\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Check if user with id1 have website\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].website).to.eql(\"hildegard.org\");\r",
							"});\r",
							"pm.test(\"Check if user with id3 have address\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[2].address).to.eql(\"hildegard.org\");\r",
							"});\r",
							"pm.test(\"Check if user with id4 have username\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[3].username).to.eql(\"Karianne\");\r",
							"});\r",
							"pm.test(\"Check if user with id3 have address\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[3].address.street).to.eql(\"Hoeger Mall\");\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": []
				},
				"url": {
					"raw": "https://jsonplaceholder.typicode.com/users",
					"protocol": "https",
					"host": [
						"jsonplaceholder",
						"typicode",
						"com"
					],
					"path": [
						"users"
					]
				}
			},
			"response": []
		}
	]
}